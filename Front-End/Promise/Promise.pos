{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","structure":"mind_right","leftChildren":[],"title":"step by step write Promise","root":true,"theme":"delicate_caihong","children":[{"id":"0efdebfaeec14f78","title":"Promise(executor)&nbsp;","lineStyle":{"randomLineColor":"#BE49C4"},"children":[{"id":"9b63a2205a0b7435","title":"PromiseState = 'pending'","children":[],"parent":"0efdebfaeec14f78"},{"id":"d772df2b5ed364cc","title":"PromiseResult = undefined","children":[{"id":"8100ffd27448370b","title":"作为onResolved | onRejected的参数","parent":"d772df2b5ed364cc","children":[]}],"parent":"0efdebfaeec14f78"},{"id":"ebb84b603b66a911","title":"executor(resolve,reject)","parent":"0efdebfaeec14f78","children":[{"id":"b295d206006652f2","title":"executor是外部定义，内部执行","children":[],"parent":"ebb84b603b66a911"},{"id":"6367644956928e34","title":"resolve，reject是内部定义，外部执行（作为参数传递给外部了）","parent":"ebb84b603b66a911","children":[{"id":"4f08183dee1491c4","title":"axios中的new Axios.cancelToken(c)的参数 c 也是内部定义的函数，传递给外部，让外部能主动取消请求","parent":"6367644956928e34","children":[]}]}]},{"id":"26eedba93c06f02f","title":"resolve","parent":"0efdebfaeec14f78","children":[{"id":"e22cfbe26e6e1951","title":"pending -&gt; fullfilled","children":[],"parent":"26eedba93c06f02f"},{"id":"94fbaafc2189bc9e","title":"onResolved（async）","children":[],"parent":"26eedba93c06f02f"}]},{"id":"acaa97ec581a473a","title":"reject","parent":"0efdebfaeec14f78","children":[{"id":"7e35cb3def27ed0a","title":"pending -&gt; rejected","parent":"acaa97ec581a473a","children":[]},{"id":"68c766590951232d","title":"onRejected（async）","children":[],"parent":"acaa97ec581a473a"}]}],"parent":"root"},{"id":"d03faa03eb19848a","title":"then(onResolved,onRejected)","lineStyle":{"randomLineColor":"#3D5EC2"},"parent":"root","children":[{"id":"1a919f0991647bdb","title":"then函数的回调函数是异步执行（注意此处用了宏队列来模拟，而原生Promise是微队列的）","parent":"d03faa03eb19848a","children":[]},{"id":"5c0e543fd50ef162","title":"没传onResolved 或 onRejected函数，补上定义好的函数","children":[{"id":"4b39bedd1d741b1b","title":"值传递&nbsp; &nbsp; &nbsp; &nbsp; onResolved：&nbsp; &nbsp; value =&gt; value&nbsp;","parent":"5c0e543fd50ef162","children":[]},{"id":"a3c29aa4258644b3","title":"异常穿透&nbsp; &nbsp; onRejected：&nbsp; &nbsp; &nbsp;reason =&gt; throw reason","parent":"5c0e543fd50ef162","children":[]}],"parent":"d03faa03eb19848a"},{"id":"c25aab2007e29658","title":"返回Promise，当then的回调函数","parent":"d03faa03eb19848a","children":[{"id":"eef681801c84169c","title":"return 非Promise时，返回的Promise由pending -&gt; fullfilled，PromiseResult为返回值","children":[],"parent":"c25aab2007e29658"},{"id":"914f24f335d8a9de","title":"return Promise时，返回的Promise与该Promise状态、结果一样","parent":"c25aab2007e29658","children":[]},{"id":"6e70eeb689af2ed8","title":"throw 或 发生错误时，返回的Promise由pending -&gt; fullfilled，PromiseResult为错误原因","children":[{"id":"b6886a8c6a1c0a69","title":"要注意的是，同步代码发生的异常&nbsp; 能捕获到，而异步代码发生的异常&nbsp; 捕获不到","parent":"6e70eeb689af2ed8","children":[]}],"parent":"c25aab2007e29658"}]}]},{"id":"b8167eb6860a195f","title":"catch(onRejected)","lineStyle":{"randomLineColor":"#80BA4C"},"parent":"root","children":[{"id":"047916340de9ffa0","title":"内部调用return&nbsp; then(undefined,onRejected)","children":[{"id":"21bda26a0f607315","title":"then方法的特例，规定只能传Promise失败的回调函数，但then内部会补上一个成功的回调函数，实现值传递功能","children":[],"parent":"047916340de9ffa0"}],"parent":"b8167eb6860a195f","collapsed":false}]},{"id":"ef45df5d82fb0854","title":"finally(finalHandler,finalHandler)","lineStyle":{"randomLineColor":"#0D7C82"},"children":[{"id":"8916d41e6d273ac6","title":"作用跟then(finalHandler,finalHandler)一样","parent":"ef45df5d82fb0854","children":[{"id":"312178b06d999ecb","title":"then方法的特例，无论Promsie成功或失败，都执行同一个回调函数","children":[],"parent":"8916d41e6d273ac6"}]},{"id":"bb64764ed999a61e","title":"但是它区别在于，finally方法返回的是绑定此方法的Promise！","children":[],"parent":"ef45df5d82fb0854"}],"parent":"root"},{"id":"bb870bce0ec605dd","title":"resolve(value)","lineStyle":{"randomLineColor":"#F88A35"},"children":[{"id":"c17460e183f887e9","title":"若value是Promise，则返回它","children":[],"parent":"bb870bce0ec605dd"},{"id":"21d92e19ff04759a","title":"若value是thenable，PromiseResult是回调函数的参数","children":[{"id":"66a797422785d751","title":"执行成功的回调则返回fullfilled状态的Promise（async）","parent":"21d92e19ff04759a","children":[]},{"id":"5a530a48acd0270b","title":"执行失败的回调则返回rejected状态的Promise（async）","children":[],"parent":"21d92e19ff04759a"}],"parent":"bb870bce0ec605dd"},{"id":"dea81f0d03b2a5f9","title":"若value是其他值，返回fullfilled状态的Promise，PromiseResult是value","parent":"bb870bce0ec605dd","children":[]}],"parent":"root"},{"id":"3288acca8cc2b4ae","title":"reject(reason)","lineStyle":{"randomLineColor":"#DD489D"},"children":[{"id":"94b3f30bc444844b","title":"返回失败的Promise，PromiseResult为reason","children":[],"parent":"3288acca8cc2b4ae"}],"parent":"root"},{"id":"75bc01202824498b","title":"all(promises)","lineStyle":{"randomLineColor":"#FA5465"},"parent":"root","children":[{"id":"7e1b1525a3c8568c","title":"返回一个Promise，参数是一个iterable（Array,String...）","parent":"75bc01202824498b","children":[{"id":"f193bde54ef0a749","title":"若promises是空的迭代对象，返回成功的Promise，PromiseResult为空数组","parent":"7e1b1525a3c8568c","children":[]},{"id":"109a2c8d1387b7d9","title":"若promises不包含Promise，则返回成功的Promise，PromiseResult为promises（Google Chrome 58）","children":[],"parent":"7e1b1525a3c8568c"},{"id":"0fc7d09a2bbc0146","title":"若promises中存在Promise","parent":"7e1b1525a3c8568c","children":[{"id":"fbe1c2a6bd9d4133","title":"若全部的Promise处于fullfilled，就返回成功的Promise，PromiseResult为依照promises数组顺序的非Promise和Promise.PromiseResult组成的数组","parent":"0fc7d09a2bbc0146","children":[]},{"id":"cd3c54537e3f94f0","title":"若有一个Promise处于rejected，返回的Promise跟失败的Promise的状态和结果相同","parent":"0fc7d09a2bbc0146","children":[]}]}]}]},{"id":"1dca100a6d99f16e","title":"race(promises)","lineStyle":{"randomLineColor":"#0FBAB0"},"parent":"root","children":[{"id":"2a007f67cc115d80","title":"返回Promise，状态由promises数组中最快到达settled的Promise决定","parent":"1dca100a6d99f16e","children":[]},{"id":"6563c2417da615ca","title":"pending -&gt; pending","children":[],"parent":"1dca100a6d99f16e"}]},{"id":"458b245125c9a5ba","title":"allSettled(promises)","lineStyle":{"randomLineColor":"#3D5EC2"},"children":[{"id":"5a9be9b9e0a68fb5","title":"返回Promise，参数为iterable，且要为Promise","children":[{"id":"559438a40aa25c1c","title":"若全部Promise处于settled阶段，返回成功的Promise，PromiseResult依据promises数组中每个元素的PromiseResult组成的数组","children":[],"parent":"5a9be9b9e0a68fb5"},{"id":"d386b27879450dab","title":"有一个pending，就返回pending的Promise","children":[],"parent":"5a9be9b9e0a68fb5"}],"parent":"458b245125c9a5ba"}],"parent":"root"},{"id":"a4c5300ece978f40","title":"any(promises)","lineStyle":{"randomLineColor":"#0D7C82"},"children":[{"id":"a1075f27ffcdda41","title":"返回Promise，promises是iterable","children":[{"id":"f59872ff911f2edd","title":"若promises是空的迭代对象，返回失败的Promise","parent":"a1075f27ffcdda41","children":[{"id":"45b352b834e09b49","title":"PromiseResult","children":[{"id":"fbec23defad16d71","title":"{ errors, message: \"All promises were rejected\", stack: \"AggregateError: All promises were rejected\" }","parent":"45b352b834e09b49","children":[]}],"parent":"f59872ff911f2edd"}]},{"id":"c851d10feedb4ad6","title":"若promises中有非Promise，异步返回成功的Promise，PromiseResult为第一个非Promise","parent":"a1075f27ffcdda41","children":[]},{"id":"2acf471dca2a546d","title":"若promises中都是Promise","parent":"a1075f27ffcdda41","children":[{"id":"4e7a4fcee01d1a60","title":"有成功的，就返回最先成功的Promise","parent":"2acf471dca2a546d","children":[]},{"id":"a64d736083712aeb","title":"全部失败，返回失败的Promise","children":[],"parent":"2acf471dca2a546d"}]}],"parent":"a4c5300ece978f40"}],"parent":"root"}]}},"meta":{"id":"5fe3e81907912910e4744771","member":"5fe3e7ed7d9c087ce9935ad2","exportTime":"2020-12-25 12:17:34","diagramInfo":{"category":"outline","title":"Promise","created":"2020-12-24 09:00:09","creator":"5fe3e7ed7d9c087ce9935ad2","modified":"2020-12-25 12:16:18"},"type":"ProcessOn Schema File","version":"1.0"}}